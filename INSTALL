Installation instructions for QDP++
=================================

1) Configuration.
---------------- 

QDP++ has been modified to use the GNU autoconf build system.
To configure you have to execute the command:

./configure <configuration options>

Some important options for QDP++ are

        --enable-parallel-arch=<arch>
        --prefix=<installation directory>
	--with-qmp=DIR
        --with-qmp-cxxflags=QMP_CXXFLAGS
	--with-qmp-ldflags=QMP_LDFLAGS
	--with-qmp-libs=QMP_LIBS
	--with-qmp-comms-type=<comms-type>
	--with-qmp-comms-cxxflags=QMP_COMMS_CXXFLAGS
	--with-qmp-comms-ldflags=QMP_COMMS_LDFLAGS
	--with-qmp-comms-libs=QMP_COMMS_LIBS
	--enable-Nc=<no of colours> 
	--enable-Nd=<no of spacetime dimensions>
	--enable-Ns=<no of spin components>
	--enable-max-volume=<max volume sites>

The values QMP_CXXFLAGS, QMP_LDFLAGS, QMP_LIBS, QMP_COMMS_CXXFLAGS,
QMP_COMMS_LDFLAGS and QMP_COMMS_LIBS can also take their values from
environment variables of the same name. The values of these environment
variables or the --with-xxxx command line switches should be set as 
follows:

QMP_CXXFLAGS  -- Compiler flags to give the C++ compiler about QMP 
		 in particular the include path flags to find QMP headers
	         eg: QMP_CXXFLAGS="-I/usr/local/qmp/include" 
		 or  --with-qmp-cxxflags="-I/usr/local/qmp/include" if
		 qmp is installed in /usr/local/qmp

QMP_LDFLAGS   -- Linker flags to give to the linker for QMP
	         in particular the link path flags to find the QMP library
		 eg: QMP_LDFLAGS="-L/usr/local/qmp/lib" or
		     --with-qmp-ldflags="-L/usr/local/qmp/lib" if qmp
		 is installed in /usr/local/qmp

QMP_LIBS      -- Linker library flags to give to the linker for QMP
		 eg: QMP_LIBS="-lqmp" or --with-qmp-libs="-qmp"

QMP_COMMS_CXXFLAGS -- Compiler flags to give the C++ compiler about 
		additional packages needed by QMP for its comms subsystem
		eg: QMP_COMMS_CXXFLAGS="-I/usr/local/mpich/include" 
		or --with-qmp-comms-cxxflags="-I/usr/local/mpich/include"
		for a QMP built over MPI using mpich where mpich is 
		installed in /usr/local/mpich

QMP_COMMS_LDFLAGS -- Linker flags to give the C++ compiler about a
		about additional packages needed by QMP for its comms
		comms subsystem eg:
		
                QMP_COMMS_LDFLAGS="-L/usr/local/mpich/lib \
				   -L/usr/local/gm/binary/lib"
		
		for QMP over MPI over GM, where the MPI is MPICH-GM installed
		in /usr/local/mpich and the GM drivers are in /usr/local/gm

QMP_COMMS_LIBS  -- additional libraries to do with QMP for its comms
		subsystem eg:
	
		QMP_COMMS_LIBS="-lmpich -lpmpich" 
		
		if QMP is built over a version of MPICH using Ethernet.


Since this may mean that a user has to enter a mammoth amount of 
environment variables or --with-qmp-xxx switches, we have modified 
qmp so that when built and installed the installation directory
may have a config/qmp_build_env.sh shellscript in it defining these
environment variables.  In particular later versions of QMP automatically
make this script and install it. In this case the configure script 
can be pointed to this file using the --with-qmp option -- see below.
Note that the definitions in this file are volatile and are over ridden
by the values for the environment variables in the shell that 
calls configure (if these environment variables are not empty values 
in that shell) and also by --with-xxxx switches (see above).


In particular if your comms system underneath QMP is MPI, you may 
have some wrapper script such as mpiCC. You can use this compiler, 
which can hide QMP_COMMS_CXXFLAGS QMP_COMMS_LDFLAGS and QMP_LIBS 
by say:

./configure CXX=mpiCC \
            --with-qmp-cxxflags=/usr/local/qmp/include \
	    --with-qmp-ldflags=/usr/local/qmp/lib      \
	    --with-qmp-libs="-lqmp"



The other individual switches:

--with-qmp=<DIR> 	Specifies a directory where QMP is installed.
		  This option is only useful for versions of QMP 1.4 or 
		  higher, where the QMP build system leaves a file in 
		  <DIR>/config/qmp_build_env.sh  listing the environment
		  variables needed for compiling with QMP. All values in 
		  qmp_build_env.sh are overriden, if the relevant values
		  are already defined in the shell, or if they are defined
		  on the configure command line with --with-qmp-xxxx= 
		  switches. 


 --enable-parallel-arch=<arch>    Specifies the type of architecture. Allowed
                                  values for <arch> are:
                                   scalar    -- single processor implementation
                                   parscalar -- parallel collection of single 
                                                processor nodes using QMP for
                                                  communications.
				   default value is scalar.
				
 --prefix=<installdir>            specifies where the QDP headers 
                                  and libraries should be installed 
                                  when you type: make install. 
	                          By default it is set to /usr/local.


 --with-qmp-comms-type=<comms-type>    This specifies what comms harness QMP
                                  is to be built over. Allowed values for
	                          COMMS_TYPE are:
				     MPI  -- Build over MPI (also MPI/GM)
				     GM   -- Build over GM.

				  this flag is only needed for non scalar
				  builds. Its default value is MPI

--enable-Nc=<Nc>                  Specify the number of colour components
				  (default is Nc=3)

--enable-Ns=<Ns>                  Specify the number of spin components
				  (default is Ns=4)

--enable-Nd=<Nd>                  Specify the number of spacetime dimensions
				  (default is Nd=4)

--enable-max-volume=<sites>       Specify the maximum number of lattice sites
			          this flag should go eventually (default is
				  512)

Specifying a compiler:

You can specify a compiler by using the CXX environment variable on the 
configure command line eg:

./configure CXX=xlC 

or 

./configure CXX=powerpc-gnu-elf-g++

This currently takes care of the cross compiling issues, as there is currently
no need to distinguish between host and target compilers.

Autoconf guesses some default compiler flags for you. On Linux this is
usually "-g -O2 -Wall". You can override (specify more optimisations)
by defining the CXXFLAGS variable which gets passed on by autoconf.
Likewise if you need extra libraries (like -lm) you can specify these
with LDFLAGS and LIBS environment variables eg:

./configure CXX=g++ CXXFLAGS="-O3" LIBS="-lm"

2) Building
-----------
After configuration, to make the library  
simply type 
	
	make

in the directory where you executed the configure script.

In this case the library will be built in ./lib
the config header file will be placed in  ./include/qmp_config.h

3) Building the examples
------------------------
The examples are no longer built by default. Type make check
to make them

3) Building in a different directory from the Source
----------------------------------------------------

This is supported, and may be desirable if you wish to have several
different configurations of the same source tree around. 
Suppose you have the distribution unpacked in directory ./qdp
you can then build a scalar version in ./scalar-build as follows

mkdir ./scalar-build
cd ./scalar-build
../qdp/configure  < options >
gmake

the libraries examples and config header file would be placed
as in 2) but relative to scalar-build

Note: You may find that there are fewer header files in this 
directory than in the toplevel source directory. This is because
most of them are still in the toplevel source directory (including
all the PETE stuff and the input files to the examples ). Only things
that actually get built end up in the build directory.

4) Building the documentation
-----------------------------

Documentation is not built by default (files produced by doxygen
take up a lot of space and take time to produce). To make the 
documentation type 

    gmake doc 

in the directory you ran configure in. The documentation should 
be built in the ./docs subdirectory of your build directory  (
which is where you ran configure ).

5) Installing
-------------

You install the library,  by typing 

	gmake install

in the top build directory ( where you ran configure ).
This will install the include files the library and the built
examples. 

It will NOT install the examples.
It will NOT install the documentation.

To install the documentation you have to type 

	gmake doc-install

6) Cleaning up. 
--------------

You can clean a build in the usual way by typing: gmake clean
You need to type: gmake doc-clean to clean up the built docs

To remove an installation, you should type gmake uninstall
(or for the docs gmake doc-uninstall)

To remove the Makefiles etc made by autoconf, type 
gmake distclean. To distclean the documentation type
gmake doc-distclean.

Since gmake distclean removes the makefiles, we recommend 
you do the gmake doc-distclean before gmake distclean.

Note if you built in a separate directory from the source, 
you can just remove the whole directory.


7) A complete example
---------------------

Here is an example 

-- with QMP installed in /Home/bj/scratch/qmp-1.3-mpich built over MPI
   (default qmp-comms-type)

-- with MPICH installed in /Home/bj/scratch/mpich-1.2.4

-- building for parallel scalar architecture with Nc=3, Nd=4, Ns=4, 
	max-volume = 512 sites (defaults)

-- building the examples and the documentation

-- to install in /Home/bj/scratch/qdp-0.19-Nd4-Ns4-Nc4-vol512-parscalar

I do the following:

mkdir build; cd build

../configure CXX=/Home/bj/scratch/mpich-1.2.4/bin/mpiCC \
     --with-qmp-cxxflags="-I/Home/bj/scratch/qmp-1.3-mpich/include" \
     --with-qmp-ldflags="-L/Home/bj/scratch/qmp-1.3-mpich/lib" \
     --with-qmp-libs="-lqmp" \
     --enable-parallel-arch=parscalar \
     --prefix=/Home/bj/scratch/qdp-0.19-Nd4-Ns4-Nc4-vol512-parscalar

gmake 
gmake examples
gmake doc
gmake install
gmake doc-install


or another alternative, is if you use a version of QMP which leaves a 
<qmp_dir>/config/qmp_build_env.sh file on installation, you can try

../configure CXX=/Home/bj/scratch/mpich-1.2.4/bin/mpiCC \
	     --enable-parallel-arch=parscalar \
	     --with-qmp=/Home/bj/scratch/qmp-install \
	     --prefix=/Home/bj/scratch/qdp-0.19-Nd4-Ns4-Nc4-vol512-parscalar

etc etc


5) Leaving a file containing the values of the environment variables.
---------------------------------------------------------------------

As of version 0.26, qdp++ creates and installs a file called 
qdp_build_env.sh in <prefix>/config/qdp_build_env.sh.

This file defines all the environment variables used in configuring 
QDP++, (ie: QMP_CXXFLAGS, QMP_LDFLAGS, QMP_LIBS, QMP_COMMS_CXXFLAGS, QMP_COMMS_LDFLAGS, QMP_LIBS) as well as QDP_CXXFLAGS, QDP_LDFLAGS and QDP_LIBS which 
contain the relevant compiler options to compile programs with QDP++. 
Each environment variable definition in this file is guarded, so that
environment variables defined in the shell calling ./configure take
precedence over those defined in the file, when the file is sourced.

This file may be useful in projects that use QDP++. For example a configure
script in such a project may source this file, and then attempt 
to compile a simple QDP++ program, saving the user from entering 
8-9 configuration options. 

5) Reporting Bugs etc.
---------------------

Send bugreports to edwards@jlab.org
 
