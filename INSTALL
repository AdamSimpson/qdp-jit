General remarks and requirements:
--------------------------------

 - C++ compiler with C++11 support (GCC known to work)

 - CUDA 5.5 or higher (which includes libdevice, CUDA 7/8 known to work)

 - GPUs with compute capability 2.0 (or higher, tested on 20, 35, 50)

 - LLVM 6.0


How to install
--------------

1) LLVM 6.0

cmake -G "Unix Makefiles" \
      -DBUILD_SHARED_LIBS="ON" \
      -DLLVM_ENABLE_RTTI="ON" \
      -DLLVM_ENABLE_ZLIB="OFF" \
      -DLLVM_ENABLE_TERMINFO="OFF" \
      -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE \
      -DCMAKE_INSTALL_PREFIX=$CMAKE_INSTALL_PREFIX \
      -DLLVM_TARGETS_TO_BUILD=$LLVM_TARGETS_TO_BUILD \
      $SRC

2) pack libdevice

On your system find the directory containing the CUDA libdevice library for your GPU.
Common places are:
[Ubuntu/dpkg] /usr/lib/nvidia-cuda-toolkit/libdevice
[Nvidia generic] /usr/local/cuda/nvvm/libdevice/
Before version 9, several libraries were included - one for each compute capability.
Since CUDA 9 only a single library is available.
Make a copy of the libdevice library you want to use into an empty directory and name the copy 'libdevice.bc'.
From the qdp-jit source directory run the command:
./pack_libdevice.sh [directory containing the libdevice copy]
This should create the two files:
include/qdp_libdevice.h
lib/qdp_libdevice.cc


3) configure and build QDP-JIT with the automake system

- only the 'parscalar' arch is supported
- single/double precision is supported


