	.func (.reg .f64 res) func_log_f64 ( .reg .f64 arg)
{
	.reg .pred 	%p<9>;
	.reg .s32 	%r<25>;
	.reg .f32 	%f<5>;
	.reg .s64 	%rd<5>;
	.reg .f64 	%fd<58>;


	mov.f64 	%fd10,arg;
	cvta.to.global.u64 	%rd1, %rd2;
	.loc 2 1491 5
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r21}, %fd10;
	}
	.loc 2 1482 5
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd10;
	}
	mov.u64 	%rd3, 9218868437227405312;
	.loc 2 1792 5
	mov.b64 	%fd1, %rd3;
	.loc 3 718 3
	setp.gt.f64 	%p1, %fd1, %fd10;
	setp.gt.f64 	%p2, %fd10, 0d0000000000000000;
	and.pred  	%p3, %p2, %p1;
	@%p3 bra 	BB0_6;

	.loc 2 405 5
	abs.f64 	%fd11, %fd10;
	.loc 3 110 3
	setp.gtu.f64 	%p4, %fd11, %fd1;
	.loc 3 769 10
	@%p4 bra 	BB0_5;

	.loc 3 771 10
	setp.eq.f64 	%p5, %fd10, 0d0000000000000000;
	@%p5 bra 	BB0_4;

	.loc 3 773 10
	setp.eq.f64 	%p6, %fd1, %fd10;
	mov.u64 	%rd4, -2251799813685248;
	.loc 2 1792 5
	mov.b64 	%fd12, %rd4;
	.loc 3 773 10
	selp.f64 	%fd57, %fd10, %fd12, %p6;
	bra.uni 	BB0_11;

BB0_4:
	.loc 3 772 5
	neg.f64 	%fd57, %fd1;
	bra.uni 	BB0_11;

BB0_5:
	.loc 3 770 5
	add.f64 	%fd57, %fd10, %fd10;
	bra.uni 	BB0_11;

BB0_6:
	.loc 3 721 5
	setp.gt.u32 	%p7, %r21, 1048575;
	mov.u32 	%r23, -1023;
	.loc 3 721 5
	@%p7 bra 	BB0_8;

	.loc 3 722 7
	mul.f64 	%fd13, %fd10, 0d4350000000000000;
	.loc 2 1491 5
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r21}, %fd13;
	}
	.loc 2 1482 5
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd13;
	}
	mov.u32 	%r23, -1077;

BB0_8:
	.loc 3 730 5
	shr.s32 	%r13, %r21, 20;
	add.s32 	%r24, %r23, %r13;
	.loc 3 731 5
	and.b32  	%r14, %r21, -2146435073;
	or.b32  	%r15, %r14, 1072693248;
	.loc 2 1473 5
	mov.b64 	%fd56, {%r22, %r15};
	.loc 3 733 5
	setp.lt.u32 	%p8, %r15, 1073127583;
	@%p8 bra 	BB0_10;

	.loc 2 1482 5
	{
	.reg .b32 %temp; 
	mov.b64 	{%r16, %temp}, %fd56;
	}
	.loc 2 1491 5
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r17}, %fd56;
	}
	.loc 3 542 3
	add.s32 	%r18, %r17, -1048576;
	.loc 2 1473 5
	mov.b64 	%fd56, {%r16, %r18};
	.loc 3 735 7
	add.s32 	%r24, %r24, 1;

BB0_10:
	.loc 3 739 5
	add.f64 	%fd14, %fd56, 0d3FF0000000000000;
	mov.f64 	%fd16, 0d3FF0000000000000;
	// inline asm
	cvt.rn.f32.f64     %f1,%fd14;
	// inline asm
	// inline asm
	rcp.approx.f32.ftz %f2,%f1;
	// inline asm
	// inline asm
	cvt.f64.f32        %fd15,%f2;
	// inline asm
	.loc 3 209 3
	neg.f64 	%fd17, %fd14;
	.loc 2 721 5
	fma.rn.f64 	%fd18, %fd17, %fd15, %fd16;
	.loc 2 721 5
	fma.rn.f64 	%fd19, %fd18, %fd18, %fd18;
	.loc 2 721 5
	fma.rn.f64 	%fd20, %fd19, %fd15, %fd15;
	.loc 3 738 5
	add.f64 	%fd21, %fd56, 0dBFF0000000000000;
	.loc 3 741 5
	mul.f64 	%fd22, %fd21, %fd20;
	.loc 3 742 5
	fma.rn.f64 	%fd23, %fd21, %fd20, %fd22;
	.loc 3 744 5
	mul.f64 	%fd24, %fd23, %fd23;
	mov.f64 	%fd25, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd26, 0d3EB1380B3AE80F1E;
	.loc 2 721 5
	fma.rn.f64 	%fd27, %fd26, %fd24, %fd25;
	mov.f64 	%fd28, 0d3EF3B2669F02676F;
	.loc 2 721 5
	fma.rn.f64 	%fd29, %fd27, %fd24, %fd28;
	mov.f64 	%fd30, 0d3F1745CBA9AB0956;
	.loc 2 721 5
	fma.rn.f64 	%fd31, %fd29, %fd24, %fd30;
	mov.f64 	%fd32, 0d3F3C71C72D1B5154;
	.loc 2 721 5
	fma.rn.f64 	%fd33, %fd31, %fd24, %fd32;
	mov.f64 	%fd34, 0d3F624924923BE72D;
	.loc 2 721 5
	fma.rn.f64 	%fd35, %fd33, %fd24, %fd34;
	mov.f64 	%fd36, 0d3F8999999999A3C4;
	.loc 2 721 5
	fma.rn.f64 	%fd37, %fd35, %fd24, %fd36;
	mov.f64 	%fd38, 0d3FB5555555555554;
	.loc 2 721 5
	fma.rn.f64 	%fd39, %fd37, %fd24, %fd38;
	.loc 3 753 5
	sub.f64 	%fd40, %fd21, %fd23;
	add.f64 	%fd41, %fd40, %fd40;
	.loc 3 754 5
	neg.f64 	%fd42, %fd23;
	.loc 2 721 5
	fma.rn.f64 	%fd43, %fd42, %fd21, %fd41;
	.loc 3 755 5
	mul.f64 	%fd44, %fd20, %fd43;
	.loc 3 757 5
	mul.f64 	%fd45, %fd39, %fd24;
	.loc 2 721 5
	fma.rn.f64 	%fd46, %fd45, %fd23, %fd44;
	.loc 3 762 5
	cvt.rn.f64.s32 	%fd47, %r24;
	mov.f64 	%fd48, 0d3FE62E42FEFA39EF;
	.loc 2 721 5
	fma.rn.f64 	%fd49, %fd47, %fd48, %fd23;
	.loc 3 763 5
	neg.s32 	%r19, %r24;
	cvt.rn.f64.s32 	%fd50, %r19;
	.loc 2 721 5
	fma.rn.f64 	%fd51, %fd50, %fd48, %fd49;
	.loc 3 764 5
	sub.f64 	%fd52, %fd51, %fd23;
	.loc 3 766 5
	sub.f64 	%fd53, %fd46, %fd52;
	mov.f64 	%fd54, 0d3C7ABC9E3B39803F;
	.loc 2 721 5
	fma.rn.f64 	%fd55, %fd47, %fd54, %fd53;
	.loc 3 768 5
	add.f64 	%fd57, %fd49, %fd55;

BB0_11:
	.loc 4 9 1
	mov.f64 	res, %fd57;
	.loc 4 11 2
	ret;
}


